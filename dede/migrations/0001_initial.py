# Generated by Django 3.2.20 on 2025-04-23 12:06

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import pyuploadcare.dj.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DayTrip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('Image', pyuploadcare.dj.models.ImageField(blank=True, null=True)),
                ('gallery_image1', pyuploadcare.dj.models.ImageField(blank=True, null=True)),
                ('gallery_image2', pyuploadcare.dj.models.ImageField(blank=True, null=True)),
                ('gallery_image3', pyuploadcare.dj.models.ImageField(blank=True, null=True)),
                ('start_date', models.DateField(help_text='Start date for recurring trips or the date for one-time trips')),
                ('end_date', models.DateField(blank=True, help_text='End date for recurring trips (optional)', null=True)),
                ('description', models.TextField(blank=True)),
                ('recurrence', models.CharField(choices=[('none', 'One-time Trip'), ('weekend', 'Every Weekend'), ('saturday', 'Every Saturday'), ('sunday', 'Every Sunday')], default='none', help_text='Select if this is a recurring trip', max_length=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('group_size', models.IntegerField(default=30, help_text='Maximum number of participants')),
                ('pickup_location', models.CharField(max_length=200)),
                ('pickup_time', models.TimeField()),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='Destination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('location', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('main_image', pyuploadcare.dj.models.ImageField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IncludedItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Tour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('Image', pyuploadcare.dj.models.ImageField(blank=True, null=True)),
                ('gallery_image1', pyuploadcare.dj.models.ImageField(blank=True, null=True)),
                ('gallery_image2', pyuploadcare.dj.models.ImageField(blank=True, null=True)),
                ('gallery_image3', pyuploadcare.dj.models.ImageField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('duration', models.IntegerField(help_text='Duration in days')),
                ('group_size', models.IntegerField(blank=True, default=30, null=True)),
                ('languages', models.CharField(max_length=100)),
                ('rating', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('reviews_count', models.IntegerField(default=0)),
                ('is_featured', models.BooleanField(default=False)),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tours', to='dede.destination')),
            ],
        ),
        migrations.CreateModel(
            name='TourInclusion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=200)),
                ('is_included', models.BooleanField(default=True)),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inclusions', to='dede.tour')),
            ],
        ),
        migrations.CreateModel(
            name='TourHighlight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('highlight', models.CharField(max_length=200)),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='highlights', to='dede.tour')),
            ],
        ),
        migrations.CreateModel(
            name='TourDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_number', models.IntegerField()),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tour_days', to='dede.tour')),
            ],
            options={
                'ordering': ['day_number'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=100)),
                ('rating', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('location_rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('price_rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('amenities_rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('services_rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('rooms_rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='dede.tour')),
            ],
        ),
        migrations.CreateModel(
            name='OptionalActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('daytrip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='optional_activities', to='dede.daytrip')),
            ],
            options={
                'verbose_name_plural': 'Optional Activities',
            },
        ),
        migrations.CreateModel(
            name='ItineraryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.TimeField()),
                ('activity', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('daytrip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itinerary_items', to='dede.daytrip')),
            ],
            options={
                'ordering': ['order', 'time'],
            },
        ),
        migrations.CreateModel(
            name='DayTripBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_date', models.DateTimeField(auto_now_add=True)),
                ('travel_date', models.DateField()),
                ('number_of_people', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1, message='Number of people must be at least 1'), django.core.validators.MaxValueValidator(1000, message='Number of people cannot exceed 1000')])),
                ('full_name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('special_requirements', models.TextField(blank=True, null=True)),
                ('booking_status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('partial', 'Partial'), ('paid', 'Paid'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('deposit_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking_reference', models.CharField(blank=True, max_length=20, unique=True)),
                ('daytrip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='dede.daytrip')),
                ('optional_activities', models.ManyToManyField(blank=True, to='dede.OptionalActivity')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Day Trip Booking',
                'verbose_name_plural': 'Day Trip Bookings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='daytrip',
            name='included_items',
            field=models.ManyToManyField(to='dede.IncludedItem'),
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_date', models.DateTimeField(auto_now_add=True)),
                ('travel_date', models.DateField()),
                ('number_of_people', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1, message='Number of people must be at least 1'), django.core.validators.MaxValueValidator(1000, message='Number of people cannot exceed 1000')])),
                ('full_name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('special_requirements', models.TextField(blank=True, null=True)),
                ('booking_status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('partial', 'Partial'), ('paid', 'Paid'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('deposit_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking_reference', models.CharField(blank=True, max_length=20, unique=True)),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='dede.tour')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
